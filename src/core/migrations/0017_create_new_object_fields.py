# Generated by Django 5.2.4 on 2025-07-20 16:50

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0016_artworkevent_exhibitevent_markerevent_objectevent_and_more'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='object',
            name='insert_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='object',
            name='update_update',
        ),
        migrations.AddField(
            model_name='object',
            name='file_extension',
            field=models.CharField(blank=True, choices=[('gif', 'GIF'), ('mp4', 'MP4'), ('webm', 'WEBM'), ('glb', 'GLB')], db_index=True, max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='object',
            name='file_name_original',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='objectevent',
            name='file_extension',
            field=models.CharField(blank=True, choices=[('gif', 'GIF'), ('mp4', 'MP4'), ('webm', 'WEBM'), ('glb', 'GLB')], max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='objectevent',
            name='file_name_original',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='object',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_objectevent" ("author", "created", "file_extension", "file_name_original", "file_size", "id", "modified", "owner_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position", "rotation", "scale", "source", "title") VALUES (NEW."author", NEW."created", NEW."file_extension", NEW."file_name_original", NEW."file_size", NEW."id", NEW."modified", NEW."owner_id", _pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."position", NEW."rotation", NEW."scale", NEW."source", NEW."title"); RETURN NULL;', hash='659af5e0d71c77115767a4c16e3ad793c8ec22d4', operation='INSERT', pgid='pgtrigger_insert_insert_25a7e', table='core_object', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='object',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_objectevent" ("author", "created", "file_extension", "file_name_original", "file_size", "id", "modified", "owner_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position", "rotation", "scale", "source", "title") VALUES (NEW."author", NEW."created", NEW."file_extension", NEW."file_name_original", NEW."file_size", NEW."id", NEW."modified", NEW."owner_id", _pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."position", NEW."rotation", NEW."scale", NEW."source", NEW."title"); RETURN NULL;', hash='726cb307fc6fa332e3bd5a6d88798076da4388a8', operation='UPDATE', pgid='pgtrigger_update_update_27852', table='core_object', when='AFTER')),
        ),
    ]
