# Generated by Django 5.2.3 on 2025-07-05 17:46

import django.db.models.deletion
import django_extensions.db.fields
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0015_remove_artwork_created_at_and_more'),
        ('pghistory', '0007_auto_20250421_0444'),
        ('users', '0011_alter_profile_user'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArtworkEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.BigIntegerField()),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExhibitEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.BigIntegerField()),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MarkerEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.BigIntegerField()),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('source', models.ImageField(upload_to='markers/')),
                ('author', models.CharField(max_length=60)),
                ('title', models.CharField(default='', max_length=60)),
                ('patt', models.FileField(upload_to='patts/')),
                ('file_size', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.BigIntegerField()),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('source', models.FileField(upload_to='objects/')),
                ('author', models.CharField(max_length=60)),
                ('title', models.CharField(default='', max_length=60)),
                ('scale', models.CharField(default='1 1', max_length=50)),
                ('position', models.CharField(default='0 0 0', max_length=50)),
                ('rotation', models.CharField(default='270 0 0', max_length=50)),
                ('file_size', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='artwork',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_artworkevent" ("augmented_id", "author_id", "created", "description", "id", "marker_id", "modified", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "title") VALUES (NEW."augmented_id", NEW."author_id", NEW."created", NEW."description", NEW."id", NEW."marker_id", NEW."modified", _pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."title"); RETURN NULL;', hash='86031a10f45ff7e9e713ff1a935ebc00ca9351f1', operation='INSERT', pgid='pgtrigger_insert_insert_65595', table='core_artwork', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='artwork',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_artworkevent" ("augmented_id", "author_id", "created", "description", "id", "marker_id", "modified", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "title") VALUES (NEW."augmented_id", NEW."author_id", NEW."created", NEW."description", NEW."id", NEW."marker_id", NEW."modified", _pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."title"); RETURN NULL;', hash='68ef12308c3924f052b3ec574418de652f472117', operation='UPDATE', pgid='pgtrigger_update_update_1ac7c', table='core_artwork', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='exhibit',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_exhibitevent" ("created", "id", "modified", "name", "owner_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "slug") VALUES (NEW."created", NEW."id", NEW."modified", NEW."name", NEW."owner_id", _pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."slug"); RETURN NULL;', hash='fb81bcad9c07a8facf5a17485b3bf7b7d233c8f9', operation='INSERT', pgid='pgtrigger_insert_insert_aaa01', table='core_exhibit', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='exhibit',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_exhibitevent" ("created", "id", "modified", "name", "owner_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "slug") VALUES (NEW."created", NEW."id", NEW."modified", NEW."name", NEW."owner_id", _pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."slug"); RETURN NULL;', hash='462f351931bca9dfce6801a12c995d3c481f89c1', operation='UPDATE', pgid='pgtrigger_update_update_7b6f5', table='core_exhibit', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='marker',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_markerevent" ("author", "created", "file_size", "id", "modified", "owner_id", "patt", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "source", "title") VALUES (NEW."author", NEW."created", NEW."file_size", NEW."id", NEW."modified", NEW."owner_id", NEW."patt", _pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."source", NEW."title"); RETURN NULL;', hash='697350500005181f93c196fd54999fd57ee6220a', operation='INSERT', pgid='pgtrigger_insert_insert_719b2', table='core_marker', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='marker',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_markerevent" ("author", "created", "file_size", "id", "modified", "owner_id", "patt", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "source", "title") VALUES (NEW."author", NEW."created", NEW."file_size", NEW."id", NEW."modified", NEW."owner_id", NEW."patt", _pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."source", NEW."title"); RETURN NULL;', hash='79456eca65392f4a8f3a026c48dbadee9edb8792', operation='UPDATE', pgid='pgtrigger_update_update_9a032', table='core_marker', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='object',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_objectevent" ("author", "created", "file_size", "id", "modified", "owner_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position", "rotation", "scale", "source", "title") VALUES (NEW."author", NEW."created", NEW."file_size", NEW."id", NEW."modified", NEW."owner_id", _pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."position", NEW."rotation", NEW."scale", NEW."source", NEW."title"); RETURN NULL;', hash='4475cd90ca6ab501c90c6c3044d577ea59a8f3b7', operation='INSERT', pgid='pgtrigger_insert_insert_25a7e', table='core_object', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='object',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_objectevent" ("author", "created", "file_size", "id", "modified", "owner_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position", "rotation", "scale", "source", "title") VALUES (NEW."author", NEW."created", NEW."file_size", NEW."id", NEW."modified", NEW."owner_id", _pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."position", NEW."rotation", NEW."scale", NEW."source", NEW."title"); RETURN NULL;', hash='c0361974472833268e48ac694f684116446d8182', operation='UPDATE', pgid='pgtrigger_update_update_27852', table='core_object', when='AFTER')),
        ),
        migrations.AddField(
            model_name='artworkevent',
            name='augmented',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='core.object'),
        ),
        migrations.AddField(
            model_name='artworkevent',
            name='author',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='users.profile'),
        ),
        migrations.AddField(
            model_name='artworkevent',
            name='marker',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='core.marker'),
        ),
        migrations.AddField(
            model_name='artworkevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='artworkevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='core.artwork'),
        ),
        migrations.AddField(
            model_name='exhibitevent',
            name='owner',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='users.profile'),
        ),
        migrations.AddField(
            model_name='exhibitevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='exhibitevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='core.exhibit'),
        ),
        migrations.AddField(
            model_name='markerevent',
            name='owner',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='users.profile'),
        ),
        migrations.AddField(
            model_name='markerevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='markerevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='core.marker'),
        ),
        migrations.AddField(
            model_name='objectevent',
            name='owner',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='users.profile'),
        ),
        migrations.AddField(
            model_name='objectevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='objectevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='core.object'),
        ),
    ]
