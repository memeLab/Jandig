# Generated by Django 5.2.4 on 2025-07-27 15:07

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0021_alter_objectevent_history_null_fields_to_string'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='artwork',
            name='insert_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='artwork',
            name='update_update',
        ),
        migrations.AddField(
            model_name='artwork',
            name='position_x',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='artwork',
            name='position_y',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='artwork',
            name='scale_x',
            field=models.FloatField(default=1.0),
        ),
        migrations.AddField(
            model_name='artwork',
            name='scale_y',
            field=models.FloatField(default=1.0),
        ),
        migrations.AddField(
            model_name='artworkevent',
            name='position_x',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='artworkevent',
            name='position_y',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='artworkevent',
            name='scale_x',
            field=models.FloatField(default=1.0),
        ),
        migrations.AddField(
            model_name='artworkevent',
            name='scale_y',
            field=models.FloatField(default=1.0),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='artwork',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_artworkevent" ("augmented_id", "author_id", "created", "description", "id", "marker_id", "modified", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position_x", "position_y", "scale_x", "scale_y", "title") VALUES (NEW."augmented_id", NEW."author_id", NEW."created", NEW."description", NEW."id", NEW."marker_id", NEW."modified", _pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."position_x", NEW."position_y", NEW."scale_x", NEW."scale_y", NEW."title"); RETURN NULL;', hash='830751127e1e0627e6a863fc60815e1fe5533751', operation='INSERT', pgid='pgtrigger_insert_insert_65595', table='core_artwork', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='artwork',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_artworkevent" ("augmented_id", "author_id", "created", "description", "id", "marker_id", "modified", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position_x", "position_y", "scale_x", "scale_y", "title") VALUES (NEW."augmented_id", NEW."author_id", NEW."created", NEW."description", NEW."id", NEW."marker_id", NEW."modified", _pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."position_x", NEW."position_y", NEW."scale_x", NEW."scale_y", NEW."title"); RETURN NULL;', hash='01dc5198d731430bba4283341637401c33d04e93', operation='UPDATE', pgid='pgtrigger_update_update_1ac7c', table='core_artwork', when='AFTER')),
        ),
    ]
